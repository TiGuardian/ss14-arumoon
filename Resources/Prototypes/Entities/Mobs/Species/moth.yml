- type: entity
  save: false
  name: Urist McFluff
  parent: BaseMobOrganic
  id: BaseMobMoth
  abstract: true
  components:
  - type: HumanoidAppearance
    species: Moth
  - type: Hunger
    starvationDamage:
      types:
        Cold: 0.25
        Bloodloss: 0.25
  - type: Thirst
  - type: Perishable
  - type: Icon
    sprite: Mobs/Species/Moth/parts.rsi
    state: full
  - type: Body
    prototype: Moth
    requiredLegs: 2
  - type: Vocal
    sounds:
      Male: UnisexMoth
      Female: UnisexMoth
      Unsexed: UnisexMoth
  - type: Flammable
    damage:
      types:
        Heat: 2 # moths should burn more easily
  - type: SlowOnDamage # Moths are weaker than everyone else, so they should take less speed penalties
    speedModifierThresholds:
      70: 0.8
  - type: MobState
  - type: MobThresholds
    thresholds:
      0: Alive
      85: Critical
      175: Dead
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Moth # moff
  - type: DamageVisuals
    thresholds: [ 15, 35, 85 ]
    damageOverlayGroups:
      Brute:
        sprite: Mobs/Effects/brute_damage.rsi
        color: "#fff01f"
      Burn:
        sprite: Mobs/Effects/burn_damage.rsi
        color: "#999999"
  - type: MeleeWeapon
    hidden: true
    soundHit:
        path: /Audio/Weapons/Xeno/alien_claw_flesh3.ogg
    angle: 30
    animation: WeaponArcClaw
    attackRate: 1
    damage:
      types:
        Slash: 5
  - type: Bloodstream
    maxBleedAmount: 7.5 #hemolymph is more viscous, therefore the limit is less
    bloodlossDamage:
      types:
        Bloodloss:
          0.75
    bloodlossHealDamage:
      types:
        Bloodloss:
          -1.5
    bloodReagent: Hemolymph
  - type: Barotrauma
    damage:
      types:
        Blunt: 0.15 #per second, scales with pressure and other constants. Half as much as humans.
  - type: Temperature
    heatDamageThreshold: 330
    coldDamageThreshold: 195
    currentTemperature: 310.15
    specificHeat: 46
    coldDamage:
      types:
        Cold : 0.05 #per second, scales with temperature & other constants
    heatDamage:
      types:
        Heat : 0.25 #per second, scales with temperature & other constants
  - type: MovementAlwaysTouching
  - type: MovementSpeedModifier
    baseWalkSpeed: 3.5
    baseSprintSpeed: 5.5
    weightlessAcceleration: 1.6
    weightlessModifier: 0.4
  - type: Fixtures
    fixtures: # TODO: This needs a second fixture just for mob collisions.
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.35
        density: 90 # weights 2x less than humans and also weaker.
        restitution: 0.0
        mask:
          - MobMask
        layer:
          - MobLayer
  - type: Sprite # sprite again because we want different layer ordering
    netsync: false
    noRot: true
    drawdepth: Mobs
    layers:
      - map: [ "enum.HumanoidVisualLayers.Chest" ]
      - map: [ "enum.HumanoidVisualLayers.Head" ]
      - map: [ "enum.HumanoidVisualLayers.Snout" ]
      - map: [ "enum.HumanoidVisualLayers.Eyes" ]
      - map: [ "enum.HumanoidVisualLayers.RArm" ]
      - map: [ "enum.HumanoidVisualLayers.LArm" ]
      - map: [ "enum.HumanoidVisualLayers.RLeg" ]
      - map: [ "enum.HumanoidVisualLayers.LLeg" ]
      - shader: StencilClear
        sprite: Mobs/Species/Human/parts.rsi #PJB on stencil clear being on the left leg: "...this is 'fine'" -https://github.com/space-wizards/space-station-14/pull/12217#issuecomment-1291677115
        # its fine, but its still very stupid that it has to be done like this instead of allowing sprites to just directly insert a stencil clear.
        # sprite refactor when
        state: l_leg
      - shader: StencilMask
        map: [ "enum.HumanoidVisualLayers.StencilMask" ]
        sprite: Mobs/Customization/masking_helpers.rsi
        state: female_full
        visible: false
      - map: [ "jumpsuit" ]
      - map: [ "enum.HumanoidVisualLayers.LHand" ]
      - map: [ "enum.HumanoidVisualLayers.RHand" ]
      - map: [ "enum.HumanoidVisualLayers.LFoot" ]
      - map: [ "enum.HumanoidVisualLayers.RFoot" ]
      - map: [ "enum.HumanoidVisualLayers.Handcuffs" ]
        color: "#ffffff"
        sprite: Objects/Misc/handcuffs.rsi
        state: body-overlay-2
        visible: false
      - map: [ "id" ]
      - map: [ "gloves" ]
      - map: [ "shoes" ]
      - map: [ "ears" ]
      - map: [ "outerClothing" ]
      - map: [ "eyes" ]
      - map: [ "belt" ]
      - map: [ "enum.HumanoidVisualLayers.Tail" ] #in the utopian future we should probably have a wings enum inserted here so everyhting doesn't break
      - map: [ "neck" ]
      - map: [ "back" ]
      - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
      - map: [ "enum.HumanoidVisualLayers.Hair" ]
      - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
      - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
      - map: [ "mask" ]
      - map: [ "head" ]
      - map: [ "pocket1" ]
      - map: [ "pocket2" ]
      - map: [ "clownedon" ] # Dynamically generated
        sprite: "Effects/creampie.rsi"
        state: "creampie_moth"
        visible: false
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
      Acidic: [Touch, Ingestion]
    reactions:
    - reagents: [Water, SpaceCleaner]
      methods: [Touch]
      effects:
      - !type:WashCreamPieReaction
    - reagents: [ PestKiller, PlantBGone ]
      methods: [ Touch, Ingestion, Injection ]
      effects:
      - !type:HealthChange
        damage:
          types:
            Poison: 5
    - reagents: [ Diethylamine ]
      methods: [ Touch, Ingestion, Injection ]
      effects:
      - !type:HealthChange
        damage:
          types:
            Poison: 0.25

- type: entity
  save: false
  name: Urist McFluff
  parent: MobHumanDummy
  id: MobMothDummy
  noSpawn: true
  description: A dummy moth meant to be used in character setup.
  components:
  - type: HumanoidAppearance
    species: Moth

#Weh
